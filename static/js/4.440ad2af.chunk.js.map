{"version":3,"sources":["Components/User/UserStatsGraphs.module.css","Components/User/UserStatsGraphs.js"],"names":["module","exports","UserStatsGraphs","data","React","useState","graph","setGraph","total","setTotal","useEffect","graphData","map","item","x","title","y","Number","acessos","numAcessos","reduce","a","b","className","styles","graphItem","innerRadius","padding","top","bottom","left","right","style","fillOpacity","stroke","strokeWidth","labels","fontSize","fill","alignment"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,MAAQ,+BAA+B,UAAY,mCAAmC,MAAQ,iC,uHCwDjGC,UArDS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,EAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,IAAMC,SAAS,GAAzC,mBAAOG,EAAP,KAAcC,EAAd,KAmBA,OAjBAL,IAAMM,WAAU,WACd,IAAMC,EAAYR,EAAKS,KAAI,SAACC,GAC1B,MAAO,CACLC,EAAGD,EAAKE,MACRC,EAAGC,OAAOJ,EAAKK,aAGfC,EAAahB,EAAKS,KAAI,gBAAGM,EAAH,EAAGA,QAAH,OAAiBD,OAAOC,MAC/CC,EAAa,IACdA,EAAa,CAAC,IAEhBV,EACEU,EAAWC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MAElCf,EAASI,KACR,CAACR,IAGF,0BAASoB,UAAS,UAAKC,IAAOlB,MAAZ,cAAlB,UACE,qBAAKiB,UAAS,UAAKC,IAAOhB,MAAZ,YAAqBgB,IAAOC,WAA1C,SACE,0CAAajB,OAEf,qBAAKe,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,CACEtB,KAAMG,EACNoB,YAAa,GACbC,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDC,MAAO,CACL7B,KAAM,CACJ8B,YAAa,GACbC,OAAQ,OACRC,YAAa,GAEfC,OAAQ,CACNC,SAAU,GACVC,KAAM,aAKd,qBAAKf,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYc,UAAU,QAAQpC,KAAMG","file":"static/js/4.440ad2af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"UserStatsGraphs_graph__3qOPD\",\"graphItem\":\"UserStatsGraphs_graphItem__crN_Y\",\"total\":\"UserStatsGraphs_total__3jrGJ\"};","import React from \"react\";\nimport styles from \"./UserStatsGraphs.module.css\";\nimport { VictoryPie, VictoryChart, VictoryBar } from \"victory\";\n\nconst UserStatsGraphs = ({ data }) => {\n  const [graph, setGraph] = React.useState([]);\n  const [total, setTotal] = React.useState(0);\n\n  React.useEffect(() => {\n    const graphData = data.map((item) => {\n      return {\n        x: item.title,\n        y: Number(item.acessos),\n      };\n    });\n    let numAcessos = data.map(({ acessos }) => Number(acessos));\n    if(numAcessos < 1) {\n      numAcessos = [1];\n    }\n    setTotal(\n      numAcessos.reduce((a, b) => a + b),\n    );\n    setGraph(graphData);\n  }, [data]); \n\n  return (\n    <section className={`${styles.graph} animeLeft`}>\n      <div className={`${styles.total} ${styles.graphItem}`}>\n        <p>Acessos: {total}</p>\n      </div>\n      <div className={styles.graphItem}>\n        <VictoryPie\n          data={graph}\n          innerRadius={50}\n          padding={{ top: 20, bottom: 20, left: 80, right: 80 }}\n          style={{\n            data: {\n              fillOpacity: 0.9,\n              stroke: '#fff',\n              strokeWidth: 2,\n            },\n            labels: {\n              fontSize: 14,\n              fill: '#333',\n            },\n          }}\n        />\n      </div>\n      <div className={styles.graphItem}>\n        <VictoryChart>\n          <VictoryBar alignment=\"start\" data={graph}></VictoryBar>\n        </VictoryChart>\n      </div>\n    </section>\n  );\n};\n\nexport default UserStatsGraphs;\n"],"sourceRoot":""}